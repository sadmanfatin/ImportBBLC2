package mnj.ont.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 05 17:17:45 BDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BBLCAcceptanceEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ImpBblcAcceptanceId {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getImpBblcAcceptanceId();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setImpBblcAcceptanceId((Number)value);
            }
        }
        ,
        ImpBblcLineId {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getImpBblcLineId();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setImpBblcLineId((Number)value);
            }
        }
        ,
        BillReferenceNo {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBillReferenceNo();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBillReferenceNo((String)value);
            }
        }
        ,
        BillReferenceDate {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBillReferenceDate();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBillReferenceDate((Date)value);
            }
        }
        ,
        BillValue {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBillValue();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBillValue((Number)value);
            }
        }
        ,
        AcceptanceDate {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getAcceptanceDate();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setAcceptanceDate((Date)value);
            }
        }
        ,
        MaturityDate {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getMaturityDate();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setMaturityDate((Date)value);
            }
        }
        ,
        BillEntryNo {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBillEntryNo();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBillEntryNo((String)value);
            }
        }
        ,
        BillEntryDate {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBillEntryDate();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBillEntryDate((Date)value);
            }
        }
        ,
        BillSubmitBank {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBillSubmitBank();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBillSubmitBank((Date)value);
            }
        }
        ,
        CreationDate {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Currency {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getCurrency();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setCurrency((String)value);
            }
        }
        ,
        NotificationSent {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getNotificationSent();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setNotificationSent((Date)value);
            }
        }
        ,
        NotificationCount {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getNotificationCount();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setNotificationCount((Number)value);
            }
        }
        ,
        PaymentAmount {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getPaymentAmount();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setPaymentAmount((Number)value);
            }
        }
        ,
        PaymentNo {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getPaymentNo();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setPaymentNo((String)value);
            }
        }
        ,
        BBLCLines {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBBLCLines();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setBBLCLines((BBLCLinesEOImpl)value);
            }
        }
        ,
        BBLC_Acceptance_inv_det_ {
            public Object get(BBLCAcceptanceEOImpl obj) {
                return obj.getBBLC_Acceptance_inv_det_();
            }

            public void put(BBLCAcceptanceEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(BBLCAcceptanceEOImpl object);

        public abstract void put(BBLCAcceptanceEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IMPBBLCACCEPTANCEID = AttributesEnum.ImpBblcAcceptanceId.index();
    public static final int IMPBBLCLINEID = AttributesEnum.ImpBblcLineId.index();
    public static final int BILLREFERENCENO = AttributesEnum.BillReferenceNo.index();
    public static final int BILLREFERENCEDATE = AttributesEnum.BillReferenceDate.index();
    public static final int BILLVALUE = AttributesEnum.BillValue.index();
    public static final int ACCEPTANCEDATE = AttributesEnum.AcceptanceDate.index();
    public static final int MATURITYDATE = AttributesEnum.MaturityDate.index();
    public static final int BILLENTRYNO = AttributesEnum.BillEntryNo.index();
    public static final int BILLENTRYDATE = AttributesEnum.BillEntryDate.index();
    public static final int BILLSUBMITBANK = AttributesEnum.BillSubmitBank.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int CURRENCY = AttributesEnum.Currency.index();
    public static final int NOTIFICATIONSENT = AttributesEnum.NotificationSent.index();
    public static final int NOTIFICATIONCOUNT = AttributesEnum.NotificationCount.index();
    public static final int PAYMENTAMOUNT = AttributesEnum.PaymentAmount.index();
    public static final int PAYMENTNO = AttributesEnum.PaymentNo.index();
    public static final int BBLCLINES = AttributesEnum.BBLCLines.index();
    public static final int BBLC_ACCEPTANCE_INV_DET_ = AttributesEnum.BBLC_Acceptance_inv_det_.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BBLCAcceptanceEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.BBLCAcceptanceEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ImpBblcAcceptanceId, using the alias name ImpBblcAcceptanceId.
     * @return the ImpBblcAcceptanceId
     */
    public Number getImpBblcAcceptanceId() {
        return (Number)getAttributeInternal(IMPBBLCACCEPTANCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcAcceptanceId.
     * @param value value to set the ImpBblcAcceptanceId
     */
    public void setImpBblcAcceptanceId(Number value) {
        setAttributeInternal(IMPBBLCACCEPTANCEID, value);
    }

    /**
     * Gets the attribute value for ImpBblcLineId, using the alias name ImpBblcLineId.
     * @return the ImpBblcLineId
     */
    public Number getImpBblcLineId() {
        return (Number)getAttributeInternal(IMPBBLCLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcLineId.
     * @param value value to set the ImpBblcLineId
     */
    public void setImpBblcLineId(Number value) {
        setAttributeInternal(IMPBBLCLINEID, value);
    }

    /**
     * Gets the attribute value for BillReferenceNo, using the alias name BillReferenceNo.
     * @return the BillReferenceNo
     */
    public String getBillReferenceNo() {
        return (String)getAttributeInternal(BILLREFERENCENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillReferenceNo.
     * @param value value to set the BillReferenceNo
     */
    public void setBillReferenceNo(String value) {
        setAttributeInternal(BILLREFERENCENO, value);
    }

    /**
     * Gets the attribute value for BillReferenceDate, using the alias name BillReferenceDate.
     * @return the BillReferenceDate
     */
    public Date getBillReferenceDate() {
        return (Date)getAttributeInternal(BILLREFERENCEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillReferenceDate.
     * @param value value to set the BillReferenceDate
     */
    public void setBillReferenceDate(Date value) {
        setAttributeInternal(BILLREFERENCEDATE, value);
    }

    /**
     * Gets the attribute value for BillValue, using the alias name BillValue.
     * @return the BillValue
     */
    public Number getBillValue() {
        return (Number)getAttributeInternal(BILLVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillValue.
     * @param value value to set the BillValue
     */
    public void setBillValue(Number value) {
        setAttributeInternal(BILLVALUE, value);
    }

    /**
     * Gets the attribute value for AcceptanceDate, using the alias name AcceptanceDate.
     * @return the AcceptanceDate
     */
    public Date getAcceptanceDate() {
        return (Date)getAttributeInternal(ACCEPTANCEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcceptanceDate.
     * @param value value to set the AcceptanceDate
     */
    public void setAcceptanceDate(Date value) {
        setAttributeInternal(ACCEPTANCEDATE, value);
    }

    /**
     * Gets the attribute value for MaturityDate, using the alias name MaturityDate.
     * @return the MaturityDate
     */
    public Date getMaturityDate() {
        return (Date)getAttributeInternal(MATURITYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaturityDate.
     * @param value value to set the MaturityDate
     */
    public void setMaturityDate(Date value) {
        setAttributeInternal(MATURITYDATE, value);
    }

    /**
     * Gets the attribute value for BillEntryNo, using the alias name BillEntryNo.
     * @return the BillEntryNo
     */
    public String getBillEntryNo() {
        return (String)getAttributeInternal(BILLENTRYNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillEntryNo.
     * @param value value to set the BillEntryNo
     */
    public void setBillEntryNo(String value) {
        setAttributeInternal(BILLENTRYNO, value);
    }

    /**
     * Gets the attribute value for BillEntryDate, using the alias name BillEntryDate.
     * @return the BillEntryDate
     */
    public Date getBillEntryDate() {
        return (Date)getAttributeInternal(BILLENTRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillEntryDate.
     * @param value value to set the BillEntryDate
     */
    public void setBillEntryDate(Date value) {
        setAttributeInternal(BILLENTRYDATE, value);
    }

    /**
     * Gets the attribute value for BillSubmitBank, using the alias name BillSubmitBank.
     * @return the BillSubmitBank
     */
    public Date getBillSubmitBank() {
        return (Date)getAttributeInternal(BILLSUBMITBANK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillSubmitBank.
     * @param value value to set the BillSubmitBank
     */
    public void setBillSubmitBank(Date value) {
        setAttributeInternal(BILLSUBMITBANK, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for Currency, using the alias name Currency.
     * @return the Currency
     */
    public String getCurrency() {
        return (String)getAttributeInternal(CURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Currency.
     * @param value value to set the Currency
     */
    public void setCurrency(String value) {
        setAttributeInternal(CURRENCY, value);
    }

    /**
     * Gets the attribute value for NotificationSent, using the alias name NotificationSent.
     * @return the NotificationSent
     */
    public Date getNotificationSent() {
        return (Date)getAttributeInternal(NOTIFICATIONSENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NotificationSent.
     * @param value value to set the NotificationSent
     */
    public void setNotificationSent(Date value) {
        setAttributeInternal(NOTIFICATIONSENT, value);
    }

    /**
     * Gets the attribute value for NotificationCount, using the alias name NotificationCount.
     * @return the NotificationCount
     */
    public Number getNotificationCount() {
        return (Number)getAttributeInternal(NOTIFICATIONCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NotificationCount.
     * @param value value to set the NotificationCount
     */
    public void setNotificationCount(Number value) {
        setAttributeInternal(NOTIFICATIONCOUNT, value);
    }

    /**
     * Gets the attribute value for PaymentAmount, using the alias name PaymentAmount.
     * @return the PaymentAmount
     */
    public Number getPaymentAmount() {
        return (Number)getAttributeInternal(PAYMENTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentAmount.
     * @param value value to set the PaymentAmount
     */
    public void setPaymentAmount(Number value) {
        setAttributeInternal(PAYMENTAMOUNT, value);
    }

    /**
     * Gets the attribute value for PaymentNo, using the alias name PaymentNo.
     * @return the PaymentNo
     */
    public String getPaymentNo() {
        return (String)getAttributeInternal(PAYMENTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentNo.
     * @param value value to set the PaymentNo
     */
    public void setPaymentNo(String value) {
        setAttributeInternal(PAYMENTNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity BBLCLinesEOImpl.
     */
    public BBLCLinesEOImpl getBBLCLines() {
        return (BBLCLinesEOImpl)getAttributeInternal(BBLCLINES);
    }

    /**
     * Sets <code>value</code> as the associated entity BBLCLinesEOImpl.
     */
    public void setBBLCLines(BBLCLinesEOImpl value) {
        setAttributeInternal(BBLCLINES, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBBLC_Acceptance_inv_det_() {
        return (RowIterator)getAttributeInternal(BBLC_ACCEPTANCE_INV_DET_);
    }


    /**
     * @param impBblcAcceptanceId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number impBblcAcceptanceId) {
        return new Key(new Object[]{impBblcAcceptanceId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("IEDOC_IMP_BBLC_ACCEPTANCE_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setImpBblcAcceptanceId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
