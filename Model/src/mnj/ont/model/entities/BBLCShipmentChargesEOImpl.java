package mnj.ont.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 08 11:38:24 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BBLCShipmentChargesEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ImpBblcDetChargeId {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getImpBblcDetChargeId();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setImpBblcDetChargeId((Number)value);
            }
        }
        ,
        ImpBblcDetailId {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getImpBblcDetailId();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setImpBblcDetailId((Number)value);
            }
        }
        ,
        ShipmentNum {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getShipmentNum();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setShipmentNum((String)value);
            }
        }
        ,
        FirstShipment {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getFirstShipment();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setFirstShipment((String)value);
            }
        }
        ,
        BBLCDetails {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getBBLCDetails();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setBBLCDetails((BBLCDetailsEOImpl)value);
            }
        }
        ,
        BBLCDetails1 {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getBBLCDetails1();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setBBLCDetails1((BBLCDetailsEOImpl)value);
            }
        }
        ,
        MnjChargesInterface {
            public Object get(BBLCShipmentChargesEOImpl obj) {
                return obj.getMnjChargesInterface();
            }

            public void put(BBLCShipmentChargesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(BBLCShipmentChargesEOImpl object);

        public abstract void put(BBLCShipmentChargesEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IMPBBLCDETCHARGEID = AttributesEnum.ImpBblcDetChargeId.index();
    public static final int IMPBBLCDETAILID = AttributesEnum.ImpBblcDetailId.index();
    public static final int SHIPMENTNUM = AttributesEnum.ShipmentNum.index();
    public static final int FIRSTSHIPMENT = AttributesEnum.FirstShipment.index();
    public static final int BBLCDETAILS = AttributesEnum.BBLCDetails.index();
    public static final int BBLCDETAILS1 = AttributesEnum.BBLCDetails1.index();
    public static final int MNJCHARGESINTERFACE = AttributesEnum.MnjChargesInterface.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BBLCShipmentChargesEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.BBLCShipmentChargesEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ImpBblcDetChargeId, using the alias name ImpBblcDetChargeId.
     * @return the ImpBblcDetChargeId
     */
    public Number getImpBblcDetChargeId() {
        return (Number)getAttributeInternal(IMPBBLCDETCHARGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcDetChargeId.
     * @param value value to set the ImpBblcDetChargeId
     */
    public void setImpBblcDetChargeId(Number value) {
        setAttributeInternal(IMPBBLCDETCHARGEID, value);
    }

    /**
     * Gets the attribute value for ImpBblcDetailId, using the alias name ImpBblcDetailId.
     * @return the ImpBblcDetailId
     */
    public Number getImpBblcDetailId() {
        return (Number)getAttributeInternal(IMPBBLCDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcDetailId.
     * @param value value to set the ImpBblcDetailId
     */
    public void setImpBblcDetailId(Number value) {
        setAttributeInternal(IMPBBLCDETAILID, value);
    }

    /**
     * Gets the attribute value for ShipmentNum, using the alias name ShipmentNum.
     * @return the ShipmentNum
     */
    public String getShipmentNum() {
        return (String)getAttributeInternal(SHIPMENTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipmentNum.
     * @param value value to set the ShipmentNum
     */
    public void setShipmentNum(String value) {
        setAttributeInternal(SHIPMENTNUM, value);
    }

    /**
     * Gets the attribute value for FirstShipment, using the alias name FirstShipment.
     * @return the FirstShipment
     */
    public String getFirstShipment() {
        return (String)getAttributeInternal(FIRSTSHIPMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstShipment.
     * @param value value to set the FirstShipment
     */
    public void setFirstShipment(String value) {
        setAttributeInternal(FIRSTSHIPMENT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity BBLCDetailsEOImpl.
     */
    public BBLCDetailsEOImpl getBBLCDetails() {
        return (BBLCDetailsEOImpl)getAttributeInternal(BBLCDETAILS);
    }

    /**
     * Sets <code>value</code> as the associated entity BBLCDetailsEOImpl.
     */
    public void setBBLCDetails(BBLCDetailsEOImpl value) {
        setAttributeInternal(BBLCDETAILS, value);
    }

    /**
     * @return the associated entity BBLCDetailsEOImpl.
     */
    public BBLCDetailsEOImpl getBBLCDetails1() {
        return (BBLCDetailsEOImpl)getAttributeInternal(BBLCDETAILS1);
    }

    /**
     * Sets <code>value</code> as the associated entity BBLCDetailsEOImpl.
     */
    public void setBBLCDetails1(BBLCDetailsEOImpl value) {
        setAttributeInternal(BBLCDETAILS1, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjChargesInterface() {
        return (RowIterator)getAttributeInternal(MNJCHARGESINTERFACE);
    }

    /**
     * @param impBblcDetChargeId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number impBblcDetChargeId) {
        return new Key(new Object[]{impBblcDetChargeId});
    }


    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("IEDOC_IMP_BBLC_DET_CHARGES_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setImpBblcDetChargeId(sVal);


    }



}
