package mnj.ont.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 29 12:33:37 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BBLCPiDetailsEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ImpBblcPiDetailId {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getImpBblcPiDetailId();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setImpBblcPiDetailId((Number)value);
            }
        }
        ,
        ImpBblcLineId {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getImpBblcLineId();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setImpBblcLineId((Number)value);
            }
        }
        ,
        PiNo {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getPiNo();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setPiNo((String)value);
            }
        }
        ,
        PiDate {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getPiDate();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setPiDate((Date)value);
            }
        }
        ,
        PiValue {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getPiValue();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setPiValue((Number)value);
            }
        }
        ,
        BpoNo {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getBpoNo();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setBpoNo((String)value);
            }
        }
        ,
        StyleNo {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getStyleNo();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setStyleNo((String)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        BeneficiaryId {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getBeneficiaryId();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setBeneficiaryId((Number)value);
            }
        }
        ,
        BeneficiaryName {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getBeneficiaryName();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setBeneficiaryName((String)value);
            }
        }
        ,
        BBLCLines {
            public Object get(BBLCPiDetailsEOImpl obj) {
                return obj.getBBLCLines();
            }

            public void put(BBLCPiDetailsEOImpl obj, Object value) {
                obj.setBBLCLines((BBLCLinesEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(BBLCPiDetailsEOImpl object);

        public abstract void put(BBLCPiDetailsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IMPBBLCPIDETAILID = AttributesEnum.ImpBblcPiDetailId.index();
    public static final int IMPBBLCLINEID = AttributesEnum.ImpBblcLineId.index();
    public static final int PINO = AttributesEnum.PiNo.index();
    public static final int PIDATE = AttributesEnum.PiDate.index();
    public static final int PIVALUE = AttributesEnum.PiValue.index();
    public static final int BPONO = AttributesEnum.BpoNo.index();
    public static final int STYLENO = AttributesEnum.StyleNo.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int BENEFICIARYID = AttributesEnum.BeneficiaryId.index();
    public static final int BENEFICIARYNAME = AttributesEnum.BeneficiaryName.index();
    public static final int BBLCLINES = AttributesEnum.BBLCLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BBLCPiDetailsEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.BBLCPiDetailsEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ImpBblcPiDetailId, using the alias name ImpBblcPiDetailId.
     * @return the ImpBblcPiDetailId
     */
    public Number getImpBblcPiDetailId() {
        return (Number)getAttributeInternal(IMPBBLCPIDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcPiDetailId.
     * @param value value to set the ImpBblcPiDetailId
     */
    public void setImpBblcPiDetailId(Number value) {
        setAttributeInternal(IMPBBLCPIDETAILID, value);
    }

    /**
     * Gets the attribute value for ImpBblcLineId, using the alias name ImpBblcLineId.
     * @return the ImpBblcLineId
     */
    public Number getImpBblcLineId() {
        return (Number)getAttributeInternal(IMPBBLCLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcLineId.
     * @param value value to set the ImpBblcLineId
     */
    public void setImpBblcLineId(Number value) {
        setAttributeInternal(IMPBBLCLINEID, value);
    }

    /**
     * Gets the attribute value for PiNo, using the alias name PiNo.
     * @return the PiNo
     */
    public String getPiNo() {
        return (String)getAttributeInternal(PINO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PiNo.
     * @param value value to set the PiNo
     */
    public void setPiNo(String value) {
        setAttributeInternal(PINO, value);
    }

    /**
     * Gets the attribute value for PiDate, using the alias name PiDate.
     * @return the PiDate
     */
    public Date getPiDate() {
        return (Date)getAttributeInternal(PIDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PiDate.
     * @param value value to set the PiDate
     */
    public void setPiDate(Date value) {
        setAttributeInternal(PIDATE, value);
    }

    /**
     * Gets the attribute value for PiValue, using the alias name PiValue.
     * @return the PiValue
     */
    public Number getPiValue() {
        return (Number)getAttributeInternal(PIVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PiValue.
     * @param value value to set the PiValue
     */
    public void setPiValue(Number value) {
        setAttributeInternal(PIVALUE, value);
    }

    /**
     * Gets the attribute value for BpoNo, using the alias name BpoNo.
     * @return the BpoNo
     */
    public String getBpoNo() {
        return (String)getAttributeInternal(BPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoNo.
     * @param value value to set the BpoNo
     */
    public void setBpoNo(String value) {
        setAttributeInternal(BPONO, value);
    }

    /**
     * Gets the attribute value for StyleNo, using the alias name StyleNo.
     * @return the StyleNo
     */
    public String getStyleNo() {
        return (String)getAttributeInternal(STYLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleNo.
     * @param value value to set the StyleNo
     */
    public void setStyleNo(String value) {
        setAttributeInternal(STYLENO, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for BeneficiaryId, using the alias name BeneficiaryId.
     * @return the BeneficiaryId
     */
    public Number getBeneficiaryId() {
        return (Number)getAttributeInternal(BENEFICIARYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BeneficiaryId.
     * @param value value to set the BeneficiaryId
     */
    public void setBeneficiaryId(Number value) {
        setAttributeInternal(BENEFICIARYID, value);
    }

    /**
     * Gets the attribute value for BeneficiaryName, using the alias name BeneficiaryName.
     * @return the BeneficiaryName
     */
    public String getBeneficiaryName() {
        return (String)getAttributeInternal(BENEFICIARYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BeneficiaryName.
     * @param value value to set the BeneficiaryName
     */
    public void setBeneficiaryName(String value) {
        setAttributeInternal(BENEFICIARYNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity BBLCLinesEOImpl.
     */
    public BBLCLinesEOImpl getBBLCLines() {
        return (BBLCLinesEOImpl)getAttributeInternal(BBLCLINES);
    }

    /**
     * Sets <code>value</code> as the associated entity BBLCLinesEOImpl.
     */
    public void setBBLCLines(BBLCLinesEOImpl value) {
        setAttributeInternal(BBLCLINES, value);
    }


    /**
     * @param impBblcPiDetailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number impBblcPiDetailId) {
        return new Key(new Object[]{impBblcPiDetailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s = new oracle.jbo.server.SequenceImpl("IEDOC_IMP_BBLC_PI_DETAILS_S",getDBTransaction());          
                oracle.jbo.domain.Number sVal = s.getSequenceNumber();          
                setImpBblcPiDetailId(sVal);

    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
