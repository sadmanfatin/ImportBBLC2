package mnj.ont.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 14 16:01:23 BDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IedocImpBblcContaiDetailEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ContainerId {
            public Object get(IedocImpBblcContaiDetailEOImpl obj) {
                return obj.getContainerId();
            }

            public void put(IedocImpBblcContaiDetailEOImpl obj, Object value) {
                obj.setContainerId((Number)value);
            }
        }
        ,
        ImpBblcDetailId {
            public Object get(IedocImpBblcContaiDetailEOImpl obj) {
                return obj.getImpBblcDetailId();
            }

            public void put(IedocImpBblcContaiDetailEOImpl obj, Object value) {
                obj.setImpBblcDetailId((Number)value);
            }
        }
        ,
        ContainerName {
            public Object get(IedocImpBblcContaiDetailEOImpl obj) {
                return obj.getContainerName();
            }

            public void put(IedocImpBblcContaiDetailEOImpl obj, Object value) {
                obj.setContainerName((String)value);
            }
        }
        ,
        ContainerSize {
            public Object get(IedocImpBblcContaiDetailEOImpl obj) {
                return obj.getContainerSize();
            }

            public void put(IedocImpBblcContaiDetailEOImpl obj, Object value) {
                obj.setContainerSize((String)value);
            }
        }
        ,
        BBLCDetails {
            public Object get(IedocImpBblcContaiDetailEOImpl obj) {
                return obj.getBBLCDetails();
            }

            public void put(IedocImpBblcContaiDetailEOImpl obj, Object value) {
                obj.setBBLCDetails((BBLCDetailsEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(IedocImpBblcContaiDetailEOImpl object);

        public abstract void put(IedocImpBblcContaiDetailEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CONTAINERID = AttributesEnum.ContainerId.index();
    public static final int IMPBBLCDETAILID = AttributesEnum.ImpBblcDetailId.index();
    public static final int CONTAINERNAME = AttributesEnum.ContainerName.index();
    public static final int CONTAINERSIZE = AttributesEnum.ContainerSize.index();
    public static final int BBLCDETAILS = AttributesEnum.BBLCDetails.index();

    /**
     * This is the default constructor (do not remove).
     */
    public IedocImpBblcContaiDetailEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.IedocImpBblcContaiDetailEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ContainerId, using the alias name ContainerId.
     * @return the ContainerId
     */
    public Number getContainerId() {
        return (Number)getAttributeInternal(CONTAINERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContainerId.
     * @param value value to set the ContainerId
     */
    public void setContainerId(Number value) {
        setAttributeInternal(CONTAINERID, value);
    }

    /**
     * Gets the attribute value for ImpBblcDetailId, using the alias name ImpBblcDetailId.
     * @return the ImpBblcDetailId
     */
    public Number getImpBblcDetailId() {
        return (Number)getAttributeInternal(IMPBBLCDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImpBblcDetailId.
     * @param value value to set the ImpBblcDetailId
     */
    public void setImpBblcDetailId(Number value) {
        setAttributeInternal(IMPBBLCDETAILID, value);
    }

    /**
     * Gets the attribute value for ContainerName, using the alias name ContainerName.
     * @return the ContainerName
     */
    public String getContainerName() {
        return (String)getAttributeInternal(CONTAINERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContainerName.
     * @param value value to set the ContainerName
     */
    public void setContainerName(String value) {
        setAttributeInternal(CONTAINERNAME, value);
    }

    /**
     * Gets the attribute value for ContainerSize, using the alias name ContainerSize.
     * @return the ContainerSize
     */
    public String getContainerSize() {
        return (String)getAttributeInternal(CONTAINERSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContainerSize.
     * @param value value to set the ContainerSize
     */
    public void setContainerSize(String value) {
        setAttributeInternal(CONTAINERSIZE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity BBLCDetailsEOImpl.
     */
    public BBLCDetailsEOImpl getBBLCDetails() {
        return (BBLCDetailsEOImpl)getAttributeInternal(BBLCDETAILS);
    }

    /**
     * Sets <code>value</code> as the associated entity BBLCDetailsEOImpl.
     */
    public void setBBLCDetails(BBLCDetailsEOImpl value) {
        setAttributeInternal(BBLCDETAILS, value);
    }


    /**
     * @param containerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number containerId) {
        return new Key(new Object[]{containerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s = new oracle.jbo.server.SequenceImpl("IEDOC_IMP_BBLC_CONTAI_DETAIL_S", getDBTransaction());
        oracle.jbo.domain.Number seqVal = s.getSequenceNumber();
        setContainerId(seqVal);
        //oracle.jbo.domain.Number tempVal = 1; 
        //Number n = new Number(999);
        //setImpBblcDetailId(n);        
        
        System.out.println("[DEBUG] IEDOC_IMP_BBLC_CONTAI_DETAIL_S: NEXT SEQUENCE === " + seqVal);
    }


}
